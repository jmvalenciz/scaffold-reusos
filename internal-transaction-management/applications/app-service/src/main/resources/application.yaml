server:
  port: 8080
spring:
  application:
    name: "internal-transaction-management"
  devtools:
    add-properties: false
  r2dbc:
    url: r2dbc:h2:mem:///testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
commons:
  jms:
    input-concurrency: 10
    input-queue: "DEV.QUEUE.2"
    input-queue-alias: ""
    reactive: true
    output-concurrency: 10
    output-queue: "DEV.QUEUE.1"
    producer-ttl: 0
ibm:
  mq:
    conn-name: "${MQ_HOST:127.0.0.1(1414)}"
    channel: "DEV.APP.SVRCONN"
    user: "${MQ_USER:app}"
    password: "${MQ_PASSWORD:passw0rd}"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://localhost:8080"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
